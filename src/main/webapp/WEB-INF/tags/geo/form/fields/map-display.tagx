<jsp:root xmlns:c="http://java.sun.com/jsp/jstl/core" xmlns:fn="http://java.sun.com/jsp/jstl/functions" xmlns:fmt="http://java.sun.com/jsp/jstl/fmt" xmlns:spring="http://www.springframework.org/tags" xmlns:form="http://www.springframework.org/tags/form" xmlns:jsp="http://java.sun.com/JSP/Page" version="2.0">
  <jsp:output omit-xml-declaration="yes" />

  <jsp:directive.attribute name="id" type="java.lang.String" required="true" rtexprvalue="true" description="The identifier for this tag (do not change!)" />
  <jsp:directive.attribute name="object" type="java.lang.Object" required="true" rtexprvalue="true" description="The form backing object" />
  <jsp:directive.attribute name="field" type="java.lang.String" required="true" rtexprvalue="true" description="The field name" />
  <jsp:directive.attribute name="label" type="java.lang.String" required="false" rtexprvalue="true" description="The label used for this field, will default to a message bundle if not supplied" />
  <jsp:directive.attribute name="date" type="java.lang.Boolean" required="false" rtexprvalue="true" description="Indicate that this field is of type java.util.Date" />
  <jsp:directive.attribute name="calendar" type="java.lang.Boolean" required="false" rtexprvalue="true" description="Indicate that this field is of type java.util.Calendar" />
  <jsp:directive.attribute name="dateTimePattern" type="java.lang.String" required="false" rtexprvalue="true" description="The date / time pattern to use if the field is a date or calendar type" />
  <jsp:directive.attribute name="render" type="java.lang.Boolean" required="false" rtexprvalue="true" description="Indicate if the contents of this tag and all enclosed tags should be rendered (default 'true')" />
  <jsp:directive.attribute name="z" type="java.lang.String" required="false" description="Used for checking if element has been modified (to recalculate simply provide empty string value)" />

  <!-- Map Options  -->
  <jsp:directive.attribute name="center" type="java.lang.String" required="false" description="Used for apply map view center. On update, map center position is on marker center position. Format [lat , lng]. DEFAULT: [39.470, -0.39]" />
  <jsp:directive.attribute name="zoom" type="java.lang.String" required="false" description="Used for apply initial zoom on map." />
  <jsp:directive.attribute name="maxZoom" type="java.lang.String" required="false" description="Used for apply max zoom on map." />

  <!-- Draw Options -->
  <jsp:directive.attribute name="color" type="java.lang.String" required="false" description="Used for display the line with an specific color. Default blue. Accepts RGB and Hex Colors" />
  <jsp:directive.attribute name="weight" type="java.lang.String" required="false" description="Used for display the line with an specific weight. Default 6." />

  <c:if test="${empty render or render}">
  
  	<c:if test="${empty center}">
    	<c:set var="center" value="[39.470, -0.39]" />
    </c:if>
    
    <c:if test="${empty zoom}">
    	<c:set var="zoom" value="5" />
    </c:if>
    
    <c:if test="${empty maxZoom}">
    	<c:set var="maxZoom" value="21" />
    </c:if>
    
    <c:if test="${empty color}">
    	<c:set var="color" value="#0033ff" />
    </c:if>
    
    <c:if test="${empty weight}">
    	<c:set var="weight" value="6" />
    </c:if>
  
    <c:if test="${not empty object and empty label}">
      <spring:message code="label_${fn:toLowerCase(fn:substringAfter(id,'_'))}" var="label" htmlEscape="false" />
    </c:if>

    <c:if test="${empty dateTimePattern}">
      <c:set value="MM/dd/yyyy" var="dateTimePattern" />
    </c:if>

	      <dl class="row dl-horizontal" id="_${fn:escapeXml(id)}_id">
			<dt><c:out value="${label}" />:</dt>
			<dd>
			<div class="controls">
				<div style="display:none;">
		      		<input type="hidden" name="${field}" id="${id}" value="${object[field]}" />
		         </div>
	      		<div id="${id}_map_control" style="height:250px;width:90%;">&amp;nbsp</div>
	      		
	      		<script>
      		jQuery(document).ready(function(){
      			var map = null;
      			// Checking if has current value
          		var currentVal = jQuery("#${id}").val();
          		if(currentVal !== ""){
          			// Create marker
          			var wkt = formatWkt(currentVal);
           			if(wkt){
          				// Creating marker using WKT
              			var marker = omnivore.wkt.parse(wkt);
          				var layers = marker._layers;
          				for(i in layers){
          					var layer = layers[i];
          					if(layers[i].options !== undefined){
          						// Setting color
              					layers[i].options.color = "${color}";
              					// Setting weight
              					layers[i].options.weight = ${weight};
          					}
          					else{
          						var moreLayers = layer.getLayers();
          						for(x in moreLayers){
          							// Setting color
                  					moreLayers[x].options.color = "${color}";
                  					// Setting weight
                  					moreLayers[x].options.weight = ${weight};
          						}
          					}
          					
          					// Creating map with view on center
          					if(layer.getLatLng !== undefined){
          						map = L.map('${id}_map_control').setView([layer.getLatLng().lat, layer.getLatLng().lng], ${zoom});	
          					}else{
          						var layers = marker._layers;
                  				for(i in layers){
                  					var layer = layers[i];
                  					// Getting map center
                  					var layerCenter = layer.getBounds().getCenter();
                  					map = L.map('${id}_map_control').setView([layerCenter.lat, layerCenter.lng], ${zoom});
                  				}
          					}
          					// Adding marker
          					marker.addTo(map);
          				}
           			}
          		}else{
          			map = L.map('${id}_map_control').setView(${center}, ${zoom});  
          		}
      			
          		L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png?bar', {
          		    maxZoom: ${maxZoom}
          		}).addTo(map);
          		
          		setTimeout(function(){
          			jQuery(".leaflet-top").css("margin-top", "-42px");
          			jQuery(".leaflet-bottom").hide();
          			jQuery(".leaflet-left").css("margin-left", "20px");
          			jQuery(".leaflet-right").css("margin-right", "20px");
          			
          			map._onResize();
          			
          		},100);
          		
      		});
      	</script>
	      	</div>
	        </dd>
		</dl>

  </c:if>

</jsp:root>

